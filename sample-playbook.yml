# TODO: This playbook should work on any Origin master, and clean up after itself.
# (by using and deleting a temporary namespace)
---
- hosts: masters
  run_once: true
  tasks:

  - name: Create a namespace from inline yaml with remote kubeconfig file
    kubectl:
      kubeconfig:
        # Kubeconfig file on the remote host:
        file: /etc/origin/master/admin.kubeconfig
      namespace: default
      # You can specify your kubernetes config inline if desired. The | is important here:
      inline: |
        kind: "Namespace"
        apiVersion: v1
        metadata:
          name: testnamespace
    register: ns_apply_reg

  - debug: var=ns_apply_reg

  - slurp:
      src: /etc/origin/master/admin.kubeconfig
    register: kubeconfig_slurp

  - debug: msg="{{ kubeconfig_slurp['content'] | b64decode }}"

  # Use a kubeconfig and configmap definition from the local control host filesystem:
  - name: Create configmap with local kubeconfig and configmap files
    kubectl:
      kubeconfig:
        # Could also use a file lookup for any file on your control host:
        inline: "{{ kubeconfig_slurp['content'] | b64decode }}"
      namespace: testnamespace
      inline: "{{ lookup('file', 'configmap.yml') }}"
    register: ns_apply_reg

  - debug: var=ns_apply_reg


